---
swagger: "2.0"
info:
  version: 1.0.0
  title: Preference API
  x-ibm-name: preference-api
  description: ""
#basePath: /preferences/v1
parameters:
  Authorization:
    name: Authorization
    type: string
    required: true
    in: header
    description: ""
# consumes:
# - application/json
# produces:
# - application/json
# schemes:
# - https
# security:
# - API Key: []
paths:
  /limits:
    get:
      operationId: getLimits
      x-swagger-router-controller: preference
      description: Retrieves the profile's transaction limits
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LimitsResponse'
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LimitsResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LimitsResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
  /limits/latest:
    get:
      operationId: getLimitsLatest
      x-swagger-router-controller: preference
      description: Retrieves the profile's transaction limits
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LimitsResponse'
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LimitsResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LimitsResponse'
    parameters:
    - $ref: '#/parameters/Authorization'  
  /sortorder/{ordertype}:
    get:
      operationId: getSortOrder
      x-swagger-router-controller: preference
      description: Retrieves sort order for the specified CustomerPreferenceSubType
      parameters:
      - description: CustomerPreferenceSubType values = BENEFICIARYSORTORDER; ACCTSORTORDER;
        in: path
        name: ordertype
        type: string
        enum:
        - BENEFICIARYSORTORDER
        - ACCTSORTORDER
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/SortOrderResponse'
        204:
          description: No Content
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/SortOrderResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
definitions:
  LimitsResponse:
    properties:
      data:
        $ref: '#/definitions/Limits'
      metadata:
        $ref: '#/definitions/Metadata'
  SortOrderResponse:
    properties:
      data:
        $ref: '#/definitions/SortOrder'
      metadata:
        $ref: '#/definitions/Metadata'
  Limits:
    properties:
      dailyPaymentLimit:
        description: contanst the static daily limit (on ProfileGetInfo)
        type: integer
        format: double
      dailyTransferLimit:
        description: contanst the static daily limit (on ProfileGetInfo)
        type: integer
        format: double
      prePaidPurchaseLimit:
        description: contanst the static daily limit (on ProfileGetInfo)
        type: integer
        format: double
      rTCPayLimit:
        description: contanst the static daily limit (on ProfileGetInfo)
        type: integer
        format: double
      dailyIMALILimit:
        description: from ProfileFeatureSetEnq (PMSLMT)
        type: integer
        format: double
      dailyLottoLimit:
        description: from ProfileFeatureSetEnq (PLOLMT)
        type: integer
        format: double
      userAvailablePaymentLimit:
        description: will contain the adjusted limit if a payment was made today (on
          ProfileGetInfo)
        type: integer
        format: double
      userAvailableTransferLimit:
        description: will contain the adjusted limit if a transfer was made today
          (on ProfileGetInfo)
        type: integer
        format: double
      userAvailablePrepaidLimit:
        description: will contain the adjusted limit if a prepaid perchasse was made
          today (on ProfileGetInfo)
        type: integer
        format: double
      userAvailableRTCLimit:
        description: will contain the adjusted limit if an instant payment (RTC) was
          made today (needs to be calculated with UsedLimitEnq where LimitInstrType
          = RTC on the request - This will return what was used already and should
          then be deducted from RTCPayLimit to get the UserAvailableRTCLimit)
        type: integer
        format: double
      uerAvailableIMALILimit:
        description: will contain the adjusted limit if a payment was made today (UsedLimitEnq
          where LimitInstrType = PMS subtracted from PMSLMT on ProfileFeatureSetEnq)
        type: integer
        format: double
      userAvailableLottoLimit:
        description: will contain the adjusted limit if a payment was made today (UsedLimitEnq
          where LimitInstrType = LTO subtracted from PLOLMT on ProfileFeatureSetEnq)
        type: integer
        format: double
  SortOrder:
    properties:
      custPrefField:
        description: type of sort order (prefernece type) i.e. BENF_NO (contract value
          = CustPrefDetailFieldValue)
        type: string
      custPrefOrder:
        description: type of sort order (preference type) i.e. ASC (contract value
          = CustPrefDetailNameValue)
        type: string
  Metadata:
    properties:
      page:
        description: current page number/location
        type: integer
        format: int32
      pageSize:
        description: the amount of records to be retrieved per page (is editable)
        type: integer
        format: int32
      pageLimit:
        description: the total amount of available records
        type: integer
        format: int32
      resultData:
        $ref: '#/definitions/ResultSets'
  ResultSets:
    description: returns result code and description
    type: array
    items:
      $ref: '#/definitions/ResultSet'
  ResultSet:
    properties:
      batchID:
        description: Used for now and futuredated
        type: string
      transactionID:
        description: Used here for the 'match back' to front-end in order to display
          status per transaction (now, futuredated, & recurring)
        type: string
      recInstrID:
        description: Used for recurring instruction
        type: string
      resultDetail:
        $ref: '#/definitions/ResultDetails'
  ResultDetails:
    description: There are instances where ONE transaction can include multiple API-to-BackEnd
      calls (i.e. payment + notification + save as beneficiary + make favourite =
      4-5 calls).
    type: array
    items:
      $ref: '#/definitions/ResultDetail'
  ResultDetail:
    properties:
      operationReference:
        description: Indicates which operation this result is for on the current transaction
          i.e. transfer successfull but adding favourite failed. Values can include
          the following 'Transaction', 'Notification - "Address (082...)"', 'Favourite',
          'BeneficiarySaved'. The 'Transaction' type are for any transaction i.e.
          payment, transfer, get data etc.
        type: string
      result:
        description: Can pass the error code here.
        type: string
      status:
        description: Can pass the error description here.
        type: string
      reason:
        description: Error description
        type: string
x-ibm-configuration:
  enforced: true
  testable: true
  phase: realized
x-ibm-endpoints:
- endpointUrl: https://api-e.nedsecure.co.za/nedbankext
  description: Base Gateway API Endpoint
  type:
...
