---
swagger: "2.0"
info:
  version: 1.0.0
  title: ContactCards API
  x-ibm-name: contactcards-api
  description: ""
#basePath: /contactcards/v1
parameters:
  Authorization:
    name: Authorization
    type: string
    required: true
    in: header
    description: ""
# consumes:
# - application/json
# produces:
# - application/json
# schemes:
# - http
paths:
  /contactcardsdetails:
    get:
      operationId: contactCardsDetailsGet
      x-swagger-router-controller: contact_cards
      description: Get a list of the saved multi-dimentional beneficiaries
      parameters:
      - description: ALL; PPD; BNF; PEL; BDF. For PEL and BDF API will have to do
          some filtering before sending response back to front-end (default is all)
        in: query
        name: beneficiarytype
        type: string
        required: false
      - description: This specifies the page to view
        in: query
        name: page
        type: string
        required: false
      - description: This specifies the amount of records per page for viewing
        in: query
        name: pagesize
        type: string
        required: false
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
    post:
      operationId: contactCardsDetailsPost
      x-swagger-router-controller: contact_cards
      description: create a multi-dimentional beneficiary
      parameters:
      - description: save one or more multi-dimentional beneficiaries
        in: body
        name: BeneficiaryContactCard
        required: true
        schema:
          $ref: '#/definitions/ContactCard'
      - description: this is required as Electricity is now part of contactcards and
          has a validation call before meters can be added to beneficiaries
        in: query
        name: validate
        type: boolean
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    delete:
      operationId: contactCardsDetailsDelete
      x-swagger-router-controller: contact_cards
      description: delete a multi-dimentional beneficiary
      parameters:
      - description: delete one or more multi-dimentional beneficiaries
        in: query
        name: ContactCardID
        required: true
        type: array
        items:
          type: integer
          format: int64
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
  /contactcard/{contactcardID}:
    get:
      operationId: contactCardGet
      x-swagger-router-controller: contact_cards
      description: Get a single saved multi-dimentional beneficiary
      parameters:
      - description: contact card ID
        in: path
        name: contactcardID
        type: string
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    put:
      operationId: contactCardPut
      x-swagger-router-controller: contact_cards
      description: update a multi-dimentional beneficiary
      parameters:
      - description: this is required as Electricity is now part of contactcards and
          has a validation call before meters can be added to beneficiaries
        in: query
        name: validate
        type: boolean
        required: true
      - description: contact card ID
        in: path
        name: contactcardID
        type: string
        required: true
      - description: save one or more multi-dimentional beneficiaries
        in: body
        name: BeneficiaryContactCard
        required: true
        schema:
          $ref: '#/definitions/ContactCard'
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    delete:
      operationId: contactCardDelete
      x-swagger-router-controller: contact_cards
      description: delete a multi-dimentional beneficiary
      parameters:
      - description: contact card ID
        in: path
        name: contactcardID
        type: string
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
  /contactcards/v1/contactcardsdetails:
    get:
      operationId: contactCardsDetailsGet
      x-swagger-router-controller: contact_cards
      description: Get a list of the saved multi-dimentional beneficiaries
      parameters:
      - description: ALL; PPD; BNF; PEL; BDF. For PEL and BDF API will have to do
          some filtering before sending response back to front-end (default is all)
        in: query
        name: beneficiarytype
        type: string
        required: false
      - description: This specifies the page to view
        in: query
        name: page
        type: string
        required: false
      - description: This specifies the amount of records per page for viewing
        in: query
        name: pagesize
        type: string
        required: false
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
    post:
      operationId: contactCardsDetailsPost
      x-swagger-router-controller: contact_cards
      description: create a multi-dimentional beneficiary
      parameters:
      - description: save one or more multi-dimentional beneficiaries
        in: body
        name: BeneficiaryContactCard
        required: true
        schema:
          $ref: '#/definitions/ContactCard'
      - description: this is required as Electricity is now part of contactcards and
          has a validation call before meters can be added to beneficiaries
        in: query
        name: validate
        type: boolean
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    delete:
      operationId: contactCardsDetailsDelete
      x-swagger-router-controller: contact_cards
      description: delete a multi-dimentional beneficiary
      parameters:
      - description: delete one or more multi-dimentional beneficiaries
        in: query
        name: ContactCardID
        required: true
        type: array
        items:
          type: integer
          format: int64
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactMultipleCardsResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
  /contactcards/v1/contactcard/{contactcardID}:
    get:
      operationId: contactCardGetLatest
      x-swagger-router-controller: contact_cards
      description: Get a single saved multi-dimentional beneficiary
      parameters:
      - description: contact card ID
        in: path
        name: contactcardID
        type: string
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    put:
      operationId: contactCardPut
      x-swagger-router-controller: contact_cards
      description: update a multi-dimentional beneficiary
      parameters:
      - description: this is required as Electricity is now part of contactcards and
          has a validation call before meters can be added to beneficiaries
        in: query
        name: validate
        type: boolean
        required: true
      - description: contact card ID
        in: path
        name: contactcardID
        type: string
        required: true
      - description: save one or more multi-dimentional beneficiaries
        in: body
        name: BeneficiaryContactCard
        required: true
        schema:
          $ref: '#/definitions/ContactCard'
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    delete:
      operationId: contactCardDelete
      x-swagger-router-controller: contact_cards
      description: delete a multi-dimentional beneficiary
      parameters:
      - description: contact card ID
        in: path
        name: contactcardID
        type: string
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/ContactCardResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/ContactCardResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/ContactCardResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
definitions:
  ContactCardResponse:
    properties:
      data:
        $ref: '#/definitions/ContactCard'
      metadata:
        $ref: '#/definitions/Metadata'
  ContactMultipleCardsResponse:
    properties:
      data:
        $ref: '#/definitions/ContactCards'
      metadata:
        $ref: '#/definitions/Metadata'
  ContactCards:
    description: multi-dimentional beneficiaries. USED on GET only
    type: array
    items:
      $ref: '#/definitions/ContactCard'
  ContactCard:
    description: the multi-dimentional beneficiary
    properties:
      contactCardID:
        type: integer
        format: int64
      contactCardName:
        description: contact card name stored on mongoDB
        type: string
      contactCardDetails:
        $ref: '#/definitions/ContactCardDetails'
      contactCardNotifications:
        $ref: '#/definitions/ContactCardNotificationDetails'
  ContactCardDetails:
    description: contact card details
    type: array
    items:
      $ref: '#/definitions/ContactCardDetail'
  ContactCardDetail:
    description: contact card details (single beneficiary item details)
    properties:
      beneficiaryID:
        description: single-dimentional beneficiary ID
        type: integer
        format: int64
      beneficiaryName:
        type: string
      accountNumber:
        description: mobile number; bank acount number; meter number
        type: string
      bankName:
        description: API looks up bank name in hostdownload data of branch-codes vs
          banks. Only used on GET
        type: string
      branchCode:
        type: string
      beneficiaryType:
        description: PPD; PEL; BDF; BNF;
        type: string
      beneficiarySubType:
        description: EXT; INT; CC
        type: string
      myReference:
        description: my statement description
        type: string
      beneficiaryReference:
        description: beneficiary statement description
        type: string
  ContactCardNotificationDetails:
    description: contact card notification details
    type: array
    items:
      $ref: '#/definitions/ContactCardNotificationDetail'
  ContactCardNotificationDetail:
    description: contact card notification details
    properties:
      notificationAddress:
        description: mobile number; email address; fax number etc
        type: string
      notificationType:
        description: SMS; FAX; EMAIL; etc
        type: string
      notificationDefault:
        type: boolean
      notificationParents:
        $ref: '#/definitions/NotificationParents'
  NotificationParents:
    description: contains the details of the linked beneficiaries to this particular
      (concatenated) notification
    type: array
    items:
      $ref: '#/definitions/NotificationParent'
  NotificationParent:
    description: contains the details of the linked beneficiaries to this particular
      (concatenated) notification
    properties:
      beneficiaryID:
        type: integer
        format: int64
      beneficiaryType:
        description: PPD; PEL; BDF; BNF;
        type: string
      beneficiarySubType:
        description: EXT; INT; CC
        type: string
      notificationID:
        type: integer
        format: int64
  Metadata:
    properties:
      page:
        description: current page number/location
        type: integer
        format: int32
      pageSize:
        description: the amount of records to be retrieved per page (is editable)
        type: integer
        format: int32
      pageLimit:
        description: the total amount of available records
        type: integer
        format: int32
      resultData:
        $ref: '#/definitions/ResultSets'
  ResultSets:
    description: returns result code and description
    type: array
    items:
      $ref: '#/definitions/ResultSet'
  ResultSet:
    properties:
      batchID:
        description: Used for now and futuredated
        type: string
      transactionID:
        description: Used here for the 'match back' to front-end in order to display
          status per transaction (now, futuredated, & recurring)
        type: string
      recInstrID:
        description: Used for recurring instruction
        type: string
      resultDetail:
        $ref: '#/definitions/ResultDetails'
      execEngineRef:
        description: Executing engine (host) reference number
        type: string
  ResultDetails:
    description: There are instances where ONE transaction can include multiple API-to-BackEnd
      calls (i.e. payment + notification + save as beneficiary + make favourite =
      4-5 calls).
    type: array
    items:
      $ref: '#/definitions/ResultDetail'
  ResultDetail:
    properties:
      operationReference:
        description: Indicates which operation this result is for on the current transaction
          i.e. transfer successfull but adding favourite failed. Values can include
          the following 'Transaction', 'Notification - NotificationAddress (082...)',
          'Favourite', 'BeneficiarySaved'. The 'Transaction' type are for any transaction
          i.e. payment, transfer, get, delete etc.
        type: string
      result:
        description: Can pass the error code here.
        type: string
      status:
        description: Can pass the error description here.
        type: string
      reason:
        description: Error description
        type: string
x-ibm-configuration:
  enforced: true
  testable: true
  phase: realized
x-ibm-endpoints:
- endpointUrl: https://api-e.nedsecure.co.za/nedbankext
  description: Base Gateway API Endpoint
  type:
...
