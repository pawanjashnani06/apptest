---
swagger: "2.0"
info:
  version: 1.0.0
  title: LOTTO API
  x-ibm-name: lotto-api
  description: ""
#basePath: /lotto/v1
parameters:
  Authorization:
    name: Authorization
    type: string
    required: true
    in: header
    description: ""
# consumes:
# - application/json
# produces:
# - application/json
# schemes:
# - http
paths:
  /lottolists:
    get:
      operationId: getLottoLists
      x-swagger-router-controller: lotto
      description: Retrieves a prepaids list according to a profile number and optional
        filtering parameters
      parameters:
      - description: This specifies the period in months for which you want to retrieve
          prepaids
        in: query
        name: fromdate
        type: string
        format: date
        required: false
      - description: This specifies the to date of the enquiry
        in: query
        name: todate
        type: string
        format: date
        required: false
      - description: This specifies the from amount for which you want to retrieve
          prepaids
        in: query
        name: fromamount
        type: integer
        format: double
        required: false
      - description: This specifies the to amount for which you want to retrieve prepaids
        in: query
        name: toamount
        type: integer
        format: double
        required: false
      - description: This specifies the game for which you want to retrieve records
          (ALL; LTO; PWB)
        in: query
        name: game
        type: string
        required: false
      - description: This specifies the game type type for which you want to retrieve
          records (ALL; OWN; QPK)
        in: query
        name: gametyoe
        type: string
        required: false
      - description: This specifies the ticketstatus for which you want to retrieve
          records of (ALL; PEN; PRC; PPF)
        in: query
        name: ticketstatus
        type: string
        required: false
      - description: This specifies the page to view
        in: query
        name: page
        type: string
        required: false
      - description: This specifies the amount of records per page for viewing
        in: query
        name: pagesize
        type: string
        required: false
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LottoListResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LottoListResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LottoListResponse'
    post:
      operationId: createLottoLists
      x-swagger-router-controller: lotto
      description: make prepaid purchases
      parameters:
      - description: If 'false' SubmitForValImmed = 'false' else if it is 'true' then
          SubmitForValImmed = 'true'
        in: query
        name: validate
        type: boolean
        required: true
      - description: Single or list of transactions
        in: body
        name: LottoTransactions
        required: true
        schema:
          $ref: '#/definitions/LottoList'
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LottoListResponse'
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LottoListResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LottoListResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
  /lotto/v1/lottolists:
    get:
      operationId: getLottoLists
      x-swagger-router-controller: lotto
      description: Retrieves a prepaids list according to a profile number and optional
        filtering parameters
      parameters:
      - description: This specifies the period in months for which you want to retrieve
          prepaids
        in: query
        name: fromdate
        type: string
        format: date
        required: false
      - description: This specifies the to date of the enquiry
        in: query
        name: todate
        type: string
        format: date
        required: false
      - description: This specifies the from amount for which you want to retrieve
          prepaids
        in: query
        name: fromamount
        type: integer
        format: double
        required: false
      - description: This specifies the to amount for which you want to retrieve prepaids
        in: query
        name: toamount
        type: integer
        format: double
        required: false
      - description: This specifies the game for which you want to retrieve records
          (ALL; LTO; PWB)
        in: query
        name: game
        type: string
        required: false
      - description: This specifies the game type type for which you want to retrieve
          records (ALL; OWN; QPK)
        in: query
        name: gametyoe
        type: string
        required: false
      - description: This specifies the ticketstatus for which you want to retrieve
          records of (ALL; PEN; PRC; PPF)
        in: query
        name: ticketstatus
        type: string
        required: false
      - description: This specifies the page to view
        in: query
        name: page
        type: string
        required: false
      - description: This specifies the amount of records per page for viewing
        in: query
        name: pagesize
        type: string
        required: false
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LottoListResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LottoListResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LottoListResponse'
    post:
      operationId: createLottoLists
      x-swagger-router-controller: lotto
      description: make prepaid purchases
      parameters:
      - description: If 'false' SubmitForValImmed = 'false' else if it is 'true' then
          SubmitForValImmed = 'true'
        in: query
        name: validate
        type: boolean
        required: true
      - description: Single or list of transactions
        in: body
        name: LottoTransactions
        required: true
        schema:
          $ref: '#/definitions/LottoList'
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LottoListResponse'
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LottoListResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LottoListResponse'
    parameters:
    - $ref: '#/parameters/Authorization'  
  /lottobatches/{batchID}:
    get:
      operationId: getLottoBatches
      x-swagger-router-controller: lotto
      description: Gets specified lotto transaction details
      parameters:
      - description: Specific lotto batch ID to get details of
        in: path
        name: batchID
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LottoResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LottoResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LottoResponse'
    parameters:
    - $ref: '#/parameters/Authorization'
  /lotto/v1/lottobatches/{batchID}:
    get:
      operationId: getLottoBatches
      x-swagger-router-controller: lotto
      description: Gets specified lotto transaction details
      parameters:
      - description: Specific lotto batch ID to get details of
        in: path
        name: batchID
        type: integer
        format: int64
        required: true
      responses:
        200:
          description: Request successful
          schema:
            $ref: '#/definitions/LottoResponse'
        204:
          description: No Content
        207:
          description: Partial success
          schema:
            $ref: '#/definitions/LottoResponse'
        default:
          description: Returns an error that has not been specified in the implementation.
            Additional information may be contained in the Metadata object
          schema:
            $ref: '#/definitions/LottoResponse'
    parameters:
    - $ref: '#/parameters/Authorization'  
definitions:
  LottoResponse:
    properties:
      data:
        $ref: '#/definitions/LottoItem'
      metadata:
        $ref: '#/definitions/Metadata'
  LottoListResponse:
    properties:
      data:
        $ref: '#/definitions/LottoList'
      metadata:
        $ref: '#/definitions/Metadata'
  LottoList:
    properties:
      LottoItems:
        description: lotto list
        type: array
        items:
          $ref: '#/definitions/LottoItem'
  LottoItem:
    properties:
      batchID:
        description: Used for batch id (for view ticket details (like numbers played
          etc) and can be reused for replaying ticket)
        type: integer
        format: int64
      capturedDate:
        description: ONLY used on GET - on contract mapped to ClientRef
        type: string
        format: date
      clientRequestedDate:
        description: Date the client want the transaction to take place - on contract
          mapped to TrxRequestDate
        type: string
        format: date
      purchaseDate:
        description: Date of the next transaction - on contract mapped to ValueDate
          (not used for any front-end controls but required for API validate true
          and false sequence so that the correct value is recieved from host on validate
          = true and sent back on validate = false)
        type: string
        format: date
      picketRequestedTime:
        description: mapped to the 'TrxRequestTime' field on the contract for GET.
          Convert string to 24 hours i.e. '13:45'
        type: string
      pyDescription:
        description: my transaction description
        type: string
      fromAccount:
        $ref: '#/definitions/Account'
      amount:
        description: only used on GET. API automatically calculates amount on POST
          based on selection of game etc
        type: integer
        format: double
      notificationDetails:
        $ref: '#/definitions/LottoNotificationDetails'
      game:
        description: LTO; PWB
        type: string
      gameType:
        description: OWN; QPK
        type: string
      drawNumber:
        description: only used on GET. API automatically gets this from /referencedata/lotto/drawdetails
        type: integer
        format: int64
      drawDate:
        description: only used on GET. API automatically gets this from /referencedata/lotto/drawdetails
        type: string
        format: date
      drawsPlayed:
        type: integer
        format: int64
      boardsPlayed:
        type: integer
        format: int64
      isLottoPlus:
        description: indicates if the transaction was lotto plus or not
        type: boolean
      boardDetails:
        $ref: '#/definitions/BoardDetails'
      ticketStatus:
        description: PEN; PRC; PPF (map with PrepaidStatus on contract)
        type: string
      purchaseReferenceNumber:
        description: for Purchase reference number (ValueDate/NEDBANK/ExecEngineRef;
          i.e. '20160613/NEDBANK/000000489023992664'). For FBE (ValueDate/NEDBANK/FbeID;
          i.e. '20160613/NEDBANK/873')
        type: string
      favourite:
        description: On POST if 'true' call FavouriteTxAdd.
        type: boolean
  LottoNotificationDetails:
    type: array
    items:
      $ref: '#/definitions/LottoNotificationDetail'
  LottoNotificationDetail:
    properties:
      notificationType:
        description: NONE; SMS; FAX; EMAIL, SecureInbox
        type: string
        enum:
        - NONE
        - SMS
        - FAX
        - EMAIL
        - SecureInbox
      notificationAddress:
        description: mobile number; email address etc
        type: string
      notificationSequenceNumber:
        type: integer
        format: int64
  BoardDetails:
    type: array
    items:
      $ref: '#/definitions/BoardDetail'
  BoardDetail:
    properties:
      boardNumber:
        type: string
      numbersPlayed:
        type: string
  Metadata:
    properties:
      page:
        description: current page number/location
        type: integer
        format: int32
      pageSize:
        description: the amount of records to be retrieved per page (is editable)
        type: integer
        format: int32
      pageLimit:
        description: the total amount of available records
        type: integer
        format: int32
      resultData:
        $ref: '#/definitions/ResultSets'
  ResultSets:
    description: returns result code and description
    type: array
    items:
      $ref: '#/definitions/ResultSet'
  ResultSet:
    properties:
      batchID:
        description: Used for now and futuredated
        type: string
      transactionID:
        description: Used here for the 'match back' to front-end in order to display
          status per transaction (now, futuredated, & recurring)
        type: string
      recInstrID:
        description: Used for recurring instruction
        type: string
      resultDetail:
        $ref: '#/definitions/ResultDetails'
      execEngineRef:
        description: Executing engine (host) reference number
        type: string
  ResultDetails:
    description: There are instances where ONE transaction can include multiple API-to-BackEnd
      calls (i.e. payment + notification + save as beneficiary + make favourite =
      4-5 calls).
    type: array
    items:
      $ref: '#/definitions/ResultDetail'
  ResultDetail:
    properties:
      operationReference:
        description: Indicates which operation this result is for on the current transaction
          i.e. transfer successfull but adding favourite failed. Values can include
          the following 'Transaction', 'Notification - NotificationAddress (082...)',
          'Favourite', 'BeneficiarySaved'. The 'Transaction' type are for any transaction
          i.e. payment, transfer, get, delete etc.
        type: string
      result:
        description: Can pass the error code here.
        type: string
      status:
        description: Can pass the error description here.
        type: string
      reason:
        description: Error description
        type: string
  Account:
    properties:
      plasticNumber:
        description: SCP Account Resource will provide the following... AccountName
          (description); AccountNumber; CurrentBalance; AvailableBalance; AccountType;
          AccountStatus; ProductType; Currency; IsRestricted
        type: string
x-ibm-configuration:
  enforced: true
  testable: true
  phase: realized
x-ibm-endpoints:
- endpointUrl: https://api-e.nedsecure.co.za/nedbankext
  description: Base Gateway API Endpoint
  type:
...
