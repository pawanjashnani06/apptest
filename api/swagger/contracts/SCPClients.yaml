---
swagger: "2.0"
info:
  version: 0.0.2
  title: SCP Clients API
  x-ibm-name: scp-clients-api
  description: ""
paths:
#  /cards:
#    get:
#      tags: []
#      summary: ""
#      description: Gets 'Cards' objects containing relevant items for the client
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: ArrayOfCards
#            type: array
#            items:
#              title: Card
#              type: array
#              items:
#                $ref: '#/definitions/TimelineCard'
#      deprecated: false
#      security:
#      - API Key: []
#  /expirecards/{carditemidentifier}:
#    post:
#      tags: []
#      summary: ""
#      description: Expire a card for a user
#      parameters:
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      - name: carditemidentifier
#        required: true
#        type: string
#        in: path
#      responses:
#        201:
#          description: Created
#        400:
#          description: Invalid input
#      deprecated: false
#      security:
#      - API Key: []
#      consumes:
#      - application/json
#  /networth:
#    get:
#      tags: []
#      summary: ""
#      description: Return a list of Networth values for the lasst 3 months
#      parameters:
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: NetworthCollection
#            type: array
#            items:
#              title: NetworthItems
#              type: array
#              items:
#                $ref: '#/definitions/NetworthItem'
#      deprecated: false
#      security:
#      - API Key: []
#  /institutions:
#    get:
#      tags: []
#      summary: ""
#      description: Gets the list of  'Institution' objects
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: ArrayOfInstitutions
#            type: array
#            items:
#              title: Institutions
#              type: array
#              items:
#                $ref: '#/definitions/Institution'
#      deprecated: false
#      security:
#      - API Key: []
  /clients/admincard:
    get:
      tags: []
      summary: ""
      description: Gets admin cards
      parameters:
      - description: ""
        name: Authorization
        type: string
        required: true
        in: header
      responses:
        200:
          schema:
            title: ' ArrayOfCards'
            type: array
            items:
              $ref: '#/definitions/Card'
          description: ""
      operationId: getClientsCards
      x-swagger-router-controller: scp_clients
      deprecated: false
      security:
      - API Key: []
    post:
      tags: []
      summary: ""
      description: Updates the admin card
      parameters:
      - schema:
          $ref: '#/definitions/Card'
        description: ""
        name: body
        in: body
      - description: ""
        name: Authorization
        type: string
        required: true
        in: header
      responses:
        201:
          description: Created
          schema:
            type: object
        400:
          description: Invalid input
      operationId: updateClientsCards
      x-swagger-router-controller: scp_clients
      deprecated: false
      security:
      - API Key: []
      consumes:
      - application/json
#  /checklogin:
#    get:
#      tags: []
#      summary: ""
#      description: Verifies that we can service this client login
#      parameters:
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      responses:
#        200:
#          description: OK
#        403:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#  /messagetypes/{messagetypeidentifier}:
#    delete:
#      tags: []
#      summary: Removes the specified messagetype
#      description: ""
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      - name: messagetypeidentifier
#        required: true
#        type: string
#        in: path
#      responses:
#        200:
#          description: Successful response
#        204:
#          description: No Content. Nothing found to delete
#      deprecated: false
#      security:
#      - API Key: []
#      consumes:
#      - application/json
#      produces:
#      - application/json
  /clientpreferences:
    get:
      tags: []
      summary: ""
      description: Gets an array of 'UserPreference' objects containing prefernces
        for the client
      operationId: getClientPreferences
      x-swagger-router-controller: scp_clients
      parameters:
      - description: ""
        name: Authorization
        type: string
        required: true
        in: header
      responses:
        200:
          description: Successful response
          schema:
            title: ArrayOfPreferences
            type: array
            items:
              title: Preferences
              type: array
              items:
                $ref: '#/definitions/UserPreference'
      deprecated: false
      security:
      - API Key: []
    post:
      tags: []
      summary: Updates the preferences for a user
      description: ""
      operationId: getClientPreferences
      x-swagger-router-controller: scp_clients
      parameters:
      - schema:
          title: Preferences
          type: array
          items:
            $ref: '#/definitions/UserPreference'
        description: UserPreference array that needs to be updated for the specific
          user
        name: body
        required: true
        in: body
      - description: ""
        name: Authorization
        type: string
        required: true
        in: header
      responses:
        201:
          description: Created
        405:
          description: Invalid input
      deprecated: false
      security:
      - API Key: []
      produces:
      - application/json
#  /yodleelogin/{siteid}:
#    get:
#      tags: []
#      summary: ""
#      description: Gets the login fields for a given institution
#      parameters:
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      - name: siteid
#        type: string
#        required: true
#        in: path
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: LoginFields
#            type: array
#            items:
#              $ref: '#/definitions/LoginField'
#      deprecated: false
#      security:
#      - API Key: []
#    post:
#      tags: []
#      summary: Updates the preferences for a user
#      description: ""
#      parameters:
#      - schema:
#          title: LoginFields
#          type: array
#          items:
#            $ref: '#/definitions/CompletedLoginField'
#        description: LoginField array that is used when for logging into a site
#        name: body
#        required: true
#        in: body
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      - name: siteid
#        required: true
#        type: string
#        in: path
#      responses:
#        200:
#          description: OK
#          schema:
#            title: MFAField
#            type: array
#            items:
#              $ref: '#/definitions/MFAField'
#        204:
#          description: No Content
#      deprecated: false
#      security:
#      - API Key: []
#      produces:
#      - application/json
#  /messagetypes:
#    get:
#      tags: []
#      summary: ""
#      description: Gets all the 'MessageType' objects
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: ArrayOfMessageTypes
#            type: array
#            items:
#              title: MessageTypes
#              type: array
#              items:
#                $ref: '#/definitions/MessageType'
#      deprecated: false
#      security:
#      - API Key: []
#    post:
#      tags: []
#      summary: Sets a messagetype with the specified messageTypeIdentifier
#      description: ""
#      parameters:
#      - schema:
#          $ref: '#/definitions/MessageType'
#        description: MessageType object that needs to be added or updated
#        name: body
#        required: true
#        in: body
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      responses:
#        201:
#          description: Created
#        405:
#          description: Invalid input
#      deprecated: false
#      security:
#      - API Key: []
#      consumes:
#      - application/json
#      produces:
#      - application/json
#  /institutionaccounts/{institutionid}:
#    get:
#      tags: []
#      summary: ""
#      description: Gets the basic institution account information for the client
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      - description: ""
#        name: institutionid
#        required: true
#        type: string
#        in: path
#      responses:
#        200:
#          schema:
#            title: ClientAccounts
#            type: array
#            items:
#              $ref: '#/definitions/ClientAccount'
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#    post:
#      tags: []
#      summary: ""
#      description: Gets the basic institution account information for the client
#      parameters:
#      - schema:
#          title: ClientAccounts
#          type: array
#          items:
#            $ref: '#/definitions/ClientAccount'
#        description: ""
#        name: body
#        in: body
#      - description: ""
#        name: institutionid
#        required: true
#        type: string
#        in: path
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        200:
#          description: ""
#        204:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#  /recyclebin:
#    get:
#      tags: []
#      summary: ""
#      description: Gets the recycle bin for the user
#      parameters:
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: RecycleBinCollection
#            type: array
#            items:
#              title: RecycleBinItems
#              type: array
#              items:
#                $ref: '#/definitions/RecycleBinItem'
#      deprecated: false
#      security:
#      - API Key: []
#  /yodleeupdatelogin/{memsiteid}:
#    post:
#      tags: []
#      summary: Updates the preferences for a user
#      description: ""
#      parameters:
#      - schema:
#          title: LoginFields
#          type: array
#          items:
#            $ref: '#/definitions/CompletedLoginField'
#        description: ""
#        name: body
#        in: body
#      - description: ""
#        name: memsiteid
#        required: true
#        type: string
#        in: path
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        200:
#          description: OK
#          schema:
#            title: MFAField
#            type: array
#            items:
#              $ref: '#/definitions/MFAField'
#        204:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#  /yodleesiteaccounts/{memsiteid}:
#    put:
#      tags: []
#      summary: Refresh (Updates) the linked accounts at a site
#      description: ""
#      parameters:
#      - description: ""
#        name: memsiteid
#        required: true
#        type: string
#        in: path
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        201:
#          description: ""
#        204:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#    delete:
#      tags: []
#      summary: De link a site account for the user
#      description: ""
#      parameters:
#      - description: ""
#        name: memsiteid
#        required: true
#        type: string
#        in: path
#      - description: ""
#        name: siteid
#        required: true
#        type: string
#        in: query
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        201:
#          description: ""
#        204:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#  /yodleemfa/{memsiteid}:
#    post:
#      tags: []
#      summary: Send the mfa to yodleer
#      description: ""
#      parameters:
#      - schema:
#          title: CompletedMFALoginField
#          type: object
#          items:
#            $ref: '#/definitions/CompletedMFALoginField'
#        description: ""
#        name: body
#        in: body
#      - description: ""
#        name: memsiteid
#        required: true
#        type: string
#        in: path
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        200:
#          description: OK
#        204:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#  /restorerecyclerinitems/{binitemidentifier}:
#    post:
#      tags: []
#      summary: Updates the preferences for a user
#      description: ""
#      parameters:
#      - description: ""
#        name: binitemidentifier
#        required: true
#        type: string
#        in: path
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      responses:
#        201:
#          description: ""
#        204:
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
  /clientdetails:
    get:
      tags: []
      summary: ""
      description: Gets the user details
      parameters:
      - description: ""
        name: Authorization
        required: true
        type: string
        in: header
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/ClientDetailItem'
          examples:
            application/json:
              CisNumber: 110003663906
              FirstName: William
              SecondName: Jack
              Surname: Mitchell
              FullNames: Mr William Jack Mitchell
              AdditionalCellNumber: ""
              CellNumber: "+27993663906"
              EmailAddress: ""
      operationId: clientDetails
      x-swagger-router-controller: scp_clients
      deprecated: false
      security:
      - API Key: []
      produces:
      - application/json
    put:
      description: ''
      tags:
        - Secure User
      parameters:
        - name: request
          in: body
          required: true
          schema:
            type: object
            properties:
              cellNumber: {type: string}
              emailAddress: {type: string}
        - description: ''
          name: Authorization
          required: true
          type: string
          in: header
      responses:
        '200':
          description: Request has been successfully executed.
          schema:
            type: object
        default:
          description: Returns an error that has not been specified in the implementation. Additional information may be contained in the Error Description object
          schema:
            $ref: '#/definitions/ErrorDescription'
      operationId: updateClientDetails
      x-swagger-router-controller: scp_clients2
      summary: 'Used for ''ChangePassword'', ''ChangeUsername'', ''UpdateUser'''
      consumes:
      - application/json
      produces:
      - application/json
#  /recyclebin/{binItemidentifier}:
#    delete:
#      tags: []
#      summary: Removes the specified messagetype
#      description: ""
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      - description: ""
#        name: binItemidentifier
#        required: true
#        type: string
#        in: path
#      responses:
#        200:
#          description: Successful response
#          schema:
#            title: RecycleBinItems
#            type: array
#            items:
#              $ref: '#/definitions/RecycleBinItem'
#        204:
#          description: No Content. Nothing found to delete
#      deprecated: false
#      security:
#      - API Key: []
#      consumes:
#      - application/json
#      produces:
#      - application/json
#  /accounttypes:
#    get:
#      tags: []
#      summary: ""
#      description: Gets admin cards
#      parameters:
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      responses:
#        200:
#          schema:
#            title: ' ArrayOfAccountType'
#            type: array
#            items:
#              $ref: '#/definitions/AccountType'
#          description: ""
#      deprecated: false
#      security:
#      - API Key: []
#    post:
#      tags: []
#      summary: ""
#      description: Updates the account type
#      parameters:
#      - schema:
#          $ref: '#/definitions/AccountType'
#        description: ""
#        name: body
#        in: body
#      - description: ""
#        name: Authorization
#        type: string
#        required: true
#        in: header
#      responses:
#        201:
#          description: Created
#        400:
#          description: Invalid input
#      deprecated: false
#      security:
#      - API Key: []
#      consumes:
#      - application/json
#  /accounttypes/{accounttypeidentifier}:
#    delete:
#      tags: []
#      summary: Removes the specified accounttype
#      description: ""
#      parameters:
#      - description: ""
#        name: Authorization
#        required: true
#        type: string
#        in: header
#      - name: accounttypeidentifier
#        required: true
#        type: string
#        in: path
#      responses:
#        200:
#          description: Successful response
#        204:
#          description: No Content. Nothing found to delete
#      deprecated: false
#      security:
#      - API Key: []
#      consumes:
#      - application/json
#      produces:
#      - application/json
definitions:
  Card:
    properties:
      Template:
        type: string
        description: The template this card is rendered with
      Title:
        type: string
      Heading:
        type: string
      CardData:
        type: object
        description: The data for the card
  UserPreference:
    properties:
      PreferenceKey:
        type: string
        description: The key for this user preference
      PreferenceValue:
        type: string
        description: The value for this user preference
  LoginField:
    properties:
      DisplayName:
        type: string
        description: The field name to be displayed to the user
      FieldType:
        type: string
        description: The field type from Yodlee
      FieldIdentifier:
        type: string
        description: The identifier for this field
      MaxLength:
        type: integer
        format: int32
        description: The maximum amount of characters that may be entered into this
          field
      Editable:
        type: boolean
        description: Indicates if this field is editable
      Optional:
        type: boolean
        description: Indicates if this field is optional
      MFAField:
        type: boolean
        description: Indicates if this is an optional field
  MFAField:
    properties:
      Code:
        type: string
        description: The success or error code
      ResponseFieldType:
        type: string
        description: The field type for the response to Yodlee
      MinimumLength:
        type: integer
        format: int32
        description: The minimum amount of characters that may be entered into this
          field
      MaximumLength:
        type: integer
        format: int32
        description: The maximum amount of characters that may be entered into this
          field
      DisplayString:
        type: string
        description: The default message within the editable field
      MfaFieldInfoType:
        type: string
        description: The type of MFA
      NumOfMandatoryQuestions:
        type: integer
        format: int32
        description: Number of mandotary questions
      QuestionAndAnswerValues:
        type: array
        items:
          $ref: '#/definitions/MFAQandA'
      MemSiteId:
        type: integer
        format: int32
        description: The member site id for the user
      TimeOut:
        type: integer
        format: int32
        description: The amount of time before the request expire
  MFAQandA:
    properties:
      Question:
        type: string
        description: The question
      QuestionFieldType:
        type: string
        description: The field type for the question
      ResponseFieldType:
        type: string
        description: The field type for the response to Yodlee
      IsRequired:
        type: boolean
        description: The indicator if the question should have a response
      Sequence:
        type: integer
        format: int32
        description: The sequence of the question
      MetaData:
        type: string
        description: The metadata
  CompletedMFALoginField:
    properties:
      MfaFieldInfoType:
        type: string
        description: MFA type
      Token:
        type: string
        description: The value of the token
      CompletedQuestionsAndAnswers:
        type: array
        items:
          $ref: '#/definitions/CompletedMFAQandA'
  CompletedMFAQandA:
    properties:
      Answer:
        type: string
        description: The answer to the question
      AnswerFieldType:
        type: string
        description: The field type for the answer
      MetaData:
        type: string
        description: The metadata
      Question:
        type: string
        description: The question
      QuestionFieldType:
        type: string
        description: The field type for the question
  ClientDetailItem:
    properties:
      CisNumber:
        type: integer
        format: int64
      FirstName:
        type: string
        description: The client first name
      SecondName:
        type: string
        description: The client second name
      Surname:
        type: string
        description: The client surname
      FullNames:
        type: string
        description: The client full name
      AdditionalCellNumber:
        type: string
        description: The client AdditionalCellNumber
      CellNumber:
        type: string
        description: The client CellNumber
      EmailAddress:
        type: string
        description: The client EmailAddress
      BirthDate:
        type: string
        format: date
        description: The client BirthDate
      FicaStatus:
        type: integer
        format: int64
        description: The client FicaStatus
      SegmentId:
        type: string
        description: The client SegmentId
      IdOrTaxIdNo:
        type: integer
        format: int64
        description: The client IdOrTaxIdNo
      PassportNo:
        type: string
        description: The client PassportNo
      SecOfficerCd:
        type: string
        description: The client SecOfficerCd
      AdditionalPhoneList:
        type: array
        items:
          $ref: '#/definitions/AdditionalPhoneItem'
      Address:
        $ref: '#/definitions/AddressItem'
  AddressItem:
    properties:
      AddressLines:
        type: array
        items:
          $ref: '#/definitions/AddressLineItem'
        description: The address lines
      AddressCity:
        type: string
        description: The city
      AddressPostalCode:
        type: string
        description: The postal code
      AddressProvince:
        type: string
        description: The province
      AddressCountry:
        type: string
        description: The country
  AddressLineItem:
    properties:
      AddressLine:
        type: string
        description: The address line
  AdditionalPhoneItem:
    properties:
      AdditionalPhoneType:
        type: string
        description: The phone type (Fax,Work,etc)
      AdditionalPhoneNumber:
        type: string
        description: The phone number
  Institution:
    properties:
      InstitutionId:
        type: integer
        format: int32
        description: The identifier for the institution
      InstitutionDescription:
        type: string
        description: The name of the institution
      InstitutionPopularity:
        type: integer
        format: int32
        description: The popularity of the institution
  RecycleBinItem:
    properties:
      BinItemIdentifier:
        type: string
        description: A unique identifier for the deleted item
      DeletedDate:
        type: string
        format: date
        description: The date this item was deleted
      DeletedEntity:
        type: string
        description: A deleted object
  CompletedLoginField:
    properties:
      FieldIdentifier:
        type: string
        description: The identifier for this field
      Value:
        type: string
        description: The value captured by the client
  MessageType:
    properties:
      MessageTypeId:
        type: string
        description: The messagetpe id for this message type
      MessageTypeName:
        type: string
        description: The message name for this message type
      MessageTypeTemplate:
        type: string
        description: The message template for this message type
      MessageTypeIcon:
        type: string
        description: The message icon for the message type
      MessageTypeTextColour:
        type: string
        description: The message text colour for the message type
      MessageTypeIconColour:
        type: string
        description: The message icon colour for this messgase
  NetworthItem:
    properties:
      NetworthAmount:
        type: number
        format: double
        description: The networth amount on a specific date
      NetworthDate:
        type: string
        description: The target date for this networth
  ClientAccount:
    properties:
      AvailableBalance:
        type: number
        format: double
        description: The available balance for the account
      CurrentBalance:
        type: number
        format: double
        description: The current balance for the account
      AccountNumber:
        type: string
        description: ""
      AccountName:
        type: string
        description: ""
      AccountFriendlyName:
        type: string
        description: ""
      PFMAcc:
        type: boolean
        description: ""
      ItemId:
        type: string
        description: ""
      ItemAccountId:
        type: string
        description: ""
      SiteAccountId:
        type: string
        description: ""
      SiteId:
        type: integer
        format: int32
        description: ""
      InstitutionName:
        type: string
        description: ""
      IsActive:
        type: boolean
        description: ""
      IsNewlyAdded:
        type: boolean
        description: ""
      AccountType:
        type: string
        description: ""
      AccountStatus:
        type: string
        description: ""
      RefreshStatus:
        type: string
        description: ""
      LastUpdate:
        type: string
        description: The Last Update for the account
  TimelineCard:
    properties:
      NID:
        type: string
        description: Nedbank ID
      CIS:
        type: string
        description: CIS number
      utcTimeStamp:
        type: number
        format: double
        description: Utc Timestamp for the timecard
      ttlSeconds:
        type: number
        format: double
        description: Time to live for the timecard
      version:
        type: number
        format: double
        description: Version
      canCallback:
        type: boolean
        description: ""
      canFlip:
        type: boolean
        description: ""
      canDismiss:
        type: boolean
        description: ""
      pinned:
        type: boolean
        description: ""
      sourceTrackingID:
        type: string
        description: Source Tracking ID
      type:
        type: string
        description: type
      CardData:
        type: object
        description: The data for the card
  AccountType:
    properties:
      ContainerType:
        type: string
        description: The container type
      AccountTypeIcon:
        type: string
        description: The account type icon class
x-ibm-configuration:
  enforced: true
  phase: realized
  testable: true
  externalDocs: []
  attachments: []
x-ibm-endpoints:
- endpointUrl: https://api-e.nedsecure.co.za/nedbankext
  description: Base Gateway API Endpoint
  type:
...
